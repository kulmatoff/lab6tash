import { useEffect, useState } from "react";

const fetchData = async (endpoint, token, setData) => {
  const res = await fetch(`http://localhost:5000/api/reports/${endpoint}`, {
    headers: { Authorization: `Bearer ${token}` }
  });
  const result = await res.json();
  setData(result.data || []);
};

const buildTable = (columns, data) => (
  <table className="w-full border text-sm">
    <thead>
      <tr>{columns.map((col, i) => <th key={i}>{col}</th>)}</tr>
    </thead>
    <tbody>
      {data.map((row, i) => (
        <tr key={i}>{columns.map((col, j) => <td key={j}>{row[col]}</td>)}</tr>
      ))}
    </tbody>
  </table>
);

const createReport = (title, endpoint, columns) => {
  return () => {
    const [data, setData] = useState([]);
    const token = localStorage.getItem("token");
    useEffect(() => { fetchData(endpoint, token, setData); }, [token]);
    return <div className="p-6">
      <h2 className="text-xl font-bold mb-4">{title}</h2>
      {buildTable(columns, data)}
    </div>;
  };
};


export const ClientOrdersReport = () => {
  const [data, setData] = useState([]);
  const token = localStorage.getItem("token");
  const user = JSON.parse(atob(token.split('.')[1])); // –ò–∑–≤–ª–µ–∫–∞–µ–º payload –∏–∑ JWT
  const clientId = user?.id;

  useEffect(() => {
    if (!clientId) return;

    fetch(`http://localhost:5000/api/reports/client-orders/${clientId}`, {
      headers: { Authorization: `Bearer ${token}` }
    })
      .then(res => res.json())
      .then(json => setData(json.data || []))
      .catch(err => console.error("Error loading client orders:", err));
  }, [clientId, token]);

  const columns = ["‚Ññ –∑–∞–∫–∞–∑–∞", "–î–∞—Ç–∞", "–°—Ç–æ–∏–º–æ—Å—Ç—å", "‚Ññ –Ω–∞–∫–ª–∞–¥–Ω–æ–π", "–°—Ç–∞—Ç—É—Å"];

  return (
    <div className="p-6">
      <h2 className="text-xl font-bold mb-4">üõí –ó–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–∞</h2>
      <table className="w-full border text-sm">
        <thead>
          <tr>{columns.map((col, i) => <th key={i}>{col}</th>)}</tr>
        </thead>
        <tbody>
          {data.map((row, i) => (
            <tr key={i}>
              {columns.map((col, j) => <td key={j}>{row[col]}</td>)}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export const BreakEvenReportPage = createReport("üìâ –¢–æ—á–∫–∞ –±–µ–∑—É–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏", "break-even", ["–ù–æ–º–µ—Ä", "–¢–∏–ø —Ç–æ–≤–∞—Ä–∞", "–¢–æ–≤–∞—Ä", "–¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏", "–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏", "–ü—Ä–∏–±—ã–ª—å"]);
export const ClientDebtsReport = createReport("üí∞ –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤", "client-debts", ["‚Ññ –∑–∞–∫–∞–∑–∞", "–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ", "–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Å—É–º–º–∞ –æ–ø–ª–∞—Ç—ã", "–î–∞—Ç–∞ –¥–µ–¥–ª–∞–π–Ω–∞ –ø–ª–∞—Ç–µ–∂–∞"]);
export const OrdersSummaryReport = createReport("üì¶ –°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–æ–≤", "orders-summary", ["–ù–æ–º–µ—Ä", "–î–∞—Ç–∞", "–°–æ—Å—Ç–æ—è–Ω–∏–µ", "–¢–∏–ø –∑–∞–∫–∞–∑–∞", "–ö –æ–ø–ª–∞—Ç–µ"]);
export const PromotionsReport = createReport("üéâ –¢–µ–∫—É—â–∏–µ –∞–∫—Ü–∏–∏", "sales-promotions", ["–ù–æ–º–µ—Ä", "–ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ü–∏–∏", "–°–∫–∏–¥–∫–∞", "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞", "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"]);
export const SupplierDebtReport = createReport("üì¶ –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤", "supplier-debt", ["–ù–æ–º–µ—Ä", "–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏", "–ü–æ—Å—Ç–∞–≤—â–∏–∫", "–î–µ–¥–ª–∞–π–Ω", "–°—É–º–º–∞ –æ–ø–ª–∞—Ç–µ", "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å"]);
export const ProfitLossReport = createReport("üìä –ü—Ä–∏–±—ã–ª—å –∏ —É–±—ã—Ç–∫–∏", "profit-loss", ["–ù–æ–º–µ—Ä", "–†–∞—Å—Ö–æ–¥", "–î–æ—Ö–æ–¥—ã", "–ù–∞–ª–æ–≥–∏", "–ü—Ä–∏–±—ã–ª—å"]);
export const ProductProfitReport = createReport("üìà –ü—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞", "supply-product-profit", ["–ù–æ–º–µ—Ä", "–¢–∏–ø —Ç–æ–≤–∞—Ä–∞", "–¢–æ–≤–∞—Ä", "–¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏", "–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏", "–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏", "–ü—Ä–∏–±—ã–ª—å"]);
export const TaxesReport = createReport("üßæ –ù–∞–ª–æ–≥–∏", "taxes", ["–ù–æ–º–µ—Ä", "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–ª–æ–≥–∞", "–°—É–º–º–∞", "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞", "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"]);
export const SalariesReport = createReport("üíº –ó–∞—Ä–ø–ª–∞—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤", "salaries", ["–ù–æ–º–µ—Ä", "–î–∞—Ç–∞", "–ù–∞—á–∏—Å–ª–µ–Ω–Ω–æ", "–û–ø–ª–∞—á–µ–Ω–æ", "–î–æ–ª–∂–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫"]);
export const SupplyPaymentsReport = createReport("üí∏ –û–ø–ª–∞—Ç—ã –ø–æ—Å—Ç–∞–≤–æ–∫", "supply-payments", ["–ù–æ–º–µ—Ä", "–î–∞—Ç–∞", "–°—É–º–º–∞", "–ü–æ—Å—Ç–∞–≤—â–∏–∫", "–°–æ—Ç—Ä—É–¥–Ω–∏–∫", "–¢–∏–ø –æ–ø–ª–∞—Ç—ã"]);
export const DefectiveProductsReport = createReport("üö´ –ë—Ä–∞–∫–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã", "defective-products", ["–ù–æ–º–µ—Ä", "–î–∞—Ç–∞ –ø–æ—Å—Ç–∞–≤–∫–∏", "–¢–∏–ø —Ç–æ–≤–∞—Ä–æ–≤", "–¢–æ–≤–∞—Ä", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "–¶–µ–Ω–∞", "–ü–æ—Å—Ç–∞–≤—â–∏–∫"]);
export const WarehouseProductsReport = createReport("üè¨ –¢–æ–≤–∞—Ä—ã –Ω–∞ —Å–∫–ª–∞–¥–µ", "warehouse-products", ["–ù–æ–º–µ—Ä", "–¢–∏–ø —Ç–æ–≤–∞—Ä–æ–≤", "–¢–æ–≤–∞—Ä", "–¶–µ–Ω–∞", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏", "–ù–æ–º–µ—Ä —Å–∫–ª–∞–¥–∞"]);
export const PriceListReport = createReport("üßæ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç", "price-list", ["–ù–æ–º–µ—Ä", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞", "–¢–æ–≤–∞—Ä", "–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞"]);
export const OrderCompositionReport = createReport("üßæ –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞", "order-composition", ["‚Ññ —Å—Ç—Ä–æ–∫–∏", "–¢–æ–≤–∞—Ä", "–¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "–°—Ç–æ–∏–º–æ—Å—Ç—å"]);
export const CanceledOrdersReport = createReport("‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã", "canceled-orders", ["–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞", "–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞", "–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–º–µ–Ω—ã", "–¢–∏–ø –æ–ø–ª–∞—Ç—ã"]);
export const ProductSalesReport = createReport("üì¶ –ü—Ä–æ–¥–∞–∂–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º", "product-sales", ["–ù–æ–º–µ—Ä", "–¢–∏–ø —Ç–æ–≤–∞—Ä–∞", "–¢–æ–≤–∞—Ä", "–¶–µ–Ω–∞", "–ö–æ–ª-–≤–æ"]);
export const SalesByClientsReport = createReport("üë• –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º", "sales-by-clients", ["–ù–æ–º–µ—Ä", "–§–ò–û", "–û–ø–ª–∞—á–µ–Ω–æ", "–°–∫–∏–¥–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞", "–ê–∫—Ü–∏—è"]);
export const SalesByWarehouseReport = createReport("üì¶ –ü—Ä–æ–¥–∞–∂–∏ –ø–æ —Å–∫–ª–∞–¥—É", "sales-by-warehouse", ["–ù–æ–º–µ—Ä", "–¢–∏–ø —Ç–æ–≤–∞—Ä–∞", "–¢–æ–≤–∞—Ä", "–¶–µ–Ω–∞", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"]);
